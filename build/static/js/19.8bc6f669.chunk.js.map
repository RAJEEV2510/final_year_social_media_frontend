{"version":3,"sources":["components/users/settings/account-settings.jsx","components/users/settings/password-settings.jsx","components/users/settings/settings.jsx"],"names":["AccountSettings","useForm","register","handleSubmit","errors","watch","reset","useFetch","loading","request","error","clearError","user","useSelector","state","currentUser","dispatch","useDispatch","useState","success","setSuccess","onSubmit","data","a","process","_id","Authorization","token","response","type","payload","expiration","localStorage","setItem","JSON","stringify","console","log","watchFields","className","placeholder","defaultValue","name","ref","minLength","maxLength","required","about","livesIn","from","value","selected","gender","disabled","hidden","validate","d","split","Date","getFullYear","birth","bio","PasswordSettings","password","setPasswod","oldPassword","newPassword","confirmPassword","onChange","e","target","Settings","React","memo","useEffect","document","title","to","activeClassName","exact","path","component"],"mappings":"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","file":"static/js/19.8bc6f669.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Loading from \"../../../shared/loading.js\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useFetch } from \"../../../shared/hooks/useFetch\";\r\nconst AccountSettings = () => {\r\n  const { register, handleSubmit, errors, reset,watch } = useForm();\r\n  const { loading, error, request, clearError } = useFetch();\r\n  const user = useSelector((state) => state.currentUser);\r\n  const dispatch = useDispatch();\r\n  const [address, setAddress] = useState();\r\n  const [success, setSuccess] = useState(null);\r\n const onSubmit = async (data) => {\r\n    try {\r\n      const response = await request(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/users/update-info/${user._id}`,\r\n        \"patch\",\r\n        data,\r\n        {\r\n          Authorization: \"Bearer \" + user.token,\r\n        }\r\n      );\r\n      setSuccess(true);\r\n      clearError();\r\n       dispatch({\r\n      type: \"USER_DATA_IN\",\r\n      payload: {\r\n        ...response.data,\r\n        expiration: user.expiration,\r\n        token:user.token\r\n      },\r\n    });\r\n    localStorage.setItem(\r\n      \"userData2\",\r\n      JSON.stringify({\r\n         ...response.data,\r\n        expiration: user.expiration,\r\n        token:user.token\r\n      })\r\n    ); \r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  };\r\n  \r\n  const watchFields = watch(['name', 'bio','birth','livesIn','from','gender']);\r\n  if (user && user.token) {\r\n    return (\r\n      <div className=\"settings__block\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"form__control\">\r\n            <div className=\"form__unit\">\r\n              <input\r\n                placeholder=\" \"\r\n                type=\"text\"\r\n                defaultValue={user.name}\r\n                name=\"name\"\r\n                className=\"form__input\"\r\n                ref={register({\r\n                  minLength: 6,\r\n                  maxLength: 32,\r\n                  required:true\r\n                })}\r\n              />\r\n              <label className=\"form__label\">Name</label>\r\n            </div>\r\n            {errors.name && (\r\n              <div className=\"form__error\">\r\n                name must be more than 5 and less than 21 chars\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"form__control dup\">\r\n            <div className=\"form__unit\">\r\n              <input\r\n                placeholder=\" \"\r\n                type=\"text\"\r\n                defaultValue={\r\n                  user.about && user.about.livesIn ? user.about.livesIn : null\r\n                }\r\n                name=\"livesIn\"\r\n                className=\"form__input\"\r\n                ref={register({\r\n                  minLength: 6,\r\n                  maxLength: 32,\r\n                })}\r\n              />\r\n              <label className=\"form__label\">Lives In</label>\r\n               {errors.livesIn && (\r\n              <div className=\"form__error\">\r\n                Invalid input\r\n              </div>\r\n            )}\r\n            </div>\r\n             \r\n            <div className=\"form__unit\">\r\n              <input\r\n                placeholder=\" \"\r\n                type=\"text\"\r\n                name=\"from\"\r\n                className=\"form__input\"\r\n                ref={register({\r\n                  minLength: 6,\r\n                  maxLength: 32,\r\n                })}\r\n                defaultValue={\r\n                  user.about && user.about.from ? user.about.from : null\r\n                }\r\n              />\r\n              <label className=\"form__label\">From</label>\r\n               {errors.from && (\r\n              <div className=\"form__error\">\r\n               invalid\r\n              </div>\r\n            )}\r\n            </div>\r\n          </div>\r\n          <div className=\"form__control\">\r\n            <div className=\"form__unit\">\r\n              <select \r\n                placeholder=\" \"\r\n                name=\"gender\"\r\n                className=\"form__input\"\r\n                ref={register}\r\n                \r\n              >\r\n              <option value=\"\" selected={user.about.gender} disabled hidden />\r\n              <option value=\"male\" selected={user.about.gender===\"male\"} >male</option>\r\n              <option value=\"female\" selected={user.about.gender===\"female\"}>female</option>\r\n              </select>\r\n              <label className=\"form__label\">Gender</label>\r\n            </div>\r\n            </div>\r\n          <div className=\"form__control\">\r\n            <div className=\"form__unit\">\r\n              <input\r\n                placeholder=\" \"\r\n                type=\"date\"\r\n                name=\"birth\"\r\n                className=\"form__input\"\r\n                ref={register({\r\n                  validate:(d)=>{\r\n                    return d.split('-')[0] <= new Date().getFullYear();\r\n                  }\r\n                })}\r\n                defaultValue={\r\n                  user.about && user.about.birth ? user.about.birth : null\r\n                }\r\n              />\r\n              <label className=\"form__label\">Date Of Birth</label>\r\n            </div>\r\n            {errors.birth && (\r\n              <div className=\"form__error\">\r\n                invalid date\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"form__control\">\r\n            <div className=\"form__unit\">\r\n              <textarea\r\n                placeholder=\" \"\r\n                name=\"bio\"\r\n                className=\"form__textarea\"\r\n                ref={register({\r\n                  minLength: 2,\r\n                  maxLength: 32,\r\n                })}\r\n                defaultValue={\r\n                  user.about && user.about.bio ? user.about.bio : null\r\n                }\r\n              />\r\n              <label className=\"form__label-area\">Bio</label>\r\n            </div>\r\n             {errors.bio && (\r\n              <div className=\"form__error\">\r\n                bio must be less than 256 chars\r\n              </div>\r\n            )}\r\n          </div>\r\n          <button disabled={loading ||  ( user.name === watchFields.name && !watchFields.gender && !watchFields.birth && !watchFields.from && !watchFields.livesIn && !watchFields.bio )} className=\"btn btn--contained1-primary mg-none block\">\r\n            save changes\r\n          </button>\r\n        </form>\r\n              {success && <h6>Your information was updated successfully </h6>}\r\n\r\n      </div>\r\n    );\r\n  }\r\n  return <Loading />;\r\n};\r\nexport default AccountSettings;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useFetch } from \"../../../shared/hooks/useFetch\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PasswordSettings = () => {\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const { loading, error, request, clearError } = useFetch();\r\n  const [success, setSuccess] = useState(null);\r\n  const [password, setPasswod] = useState(null);\r\n  const user = useSelector((state) => state.currentUser);\r\n\r\n  const handleChange = (e) => {\r\n    setPasswod(e.target.value);\r\n  };\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const response = await request(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/users/change-password/${user._id}`,\r\n        \"patch\",\r\n        data,\r\n        {\r\n          Authorization: \"Bearer \" + user.token,\r\n        }\r\n      );\r\n      setSuccess(true);\r\n      clearError();\r\n      reset({\r\n        oldPassword: null,\r\n        newPassword: null,\r\n        confirmPassword: null,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"settings__block\">\r\n      <div className=\"error-message\">\r\n        <div className=\"message\">\r\n          {error ? error || \"something went wrong\" : \"\"}\r\n        </div>\r\n      </div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form__control\">\r\n          <div className=\"form__unit\">\r\n            <input\r\n              placeholder=\" \"\r\n              type=\"password\"\r\n              name=\"oldPassword\"\r\n              className=\"form__input\"\r\n              ref={register({\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 32,\r\n              })}\r\n            />\r\n            <label className=\"form__label\">Old Password</label>\r\n          </div>\r\n          {errors.oldPassword && (\r\n            <div className=\"form__error\">\r\n              Password must be more then 5 characters and less than 33\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"form__control\">\r\n          <div className=\"form__unit\">\r\n            <input\r\n              placeholder=\" \"\r\n              onChange={handleChange}\r\n              type=\"password\"\r\n              name=\"newPassword\"\r\n              className=\"form__input\"\r\n              ref={register({\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 32,\r\n              })}\r\n            />\r\n            <label className=\"form__label\">New Password</label>\r\n          </div>\r\n          {errors.newPassword && (\r\n            <div className=\"form__error\">\r\n              Password must be more then 5 characters and less than 33\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"form__control\">\r\n          <div className=\"form__unit\">\r\n            <input\r\n              placeholder=\" \"\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              className=\"form__input\"\r\n              ref={register({\r\n                required: true,\r\n                minLength: 6,\r\n                validate: (e) => {\r\n                  return e === password;\r\n                },\r\n              })}\r\n            />\r\n            <label className=\"form__label\">Confirm Password</label>\r\n          </div>\r\n          {errors.confirmPassword && (\r\n            <div className=\"form__error\">\r\n              the confirmd password is diffrent from the new password\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button\r\n          className=\"btn btn--contained1-primary mg-none block\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"updating password...\" : \"save changes\"}\r\n        </button>\r\n      </form>\r\n      {success && <h6>Your password was updated successfully </h6>}\r\n    </div>\r\n  );\r\n};\r\nexport default PasswordSettings;\r\n","import React,{useEffect} from \"react\";\r\nimport { Route, Switch, NavLink, Redirect } from \"react-router-dom\";\r\nimport AccountSettings from \"./account-settings.jsx\";\r\nimport PasswordSettings from \"./password-settings.jsx\";\r\n\r\nconst Settings = React.memo(() => {\r\n  useEffect(()=>{\r\n       document.title=\"Settings\"\r\n  },[])\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"settings__nav\">\r\n        <ui className=\"settings__nav__list\">\r\n          <li className=\"settings__nav__item\">\r\n            <NavLink\r\n              className=\"settings__nav__link\"\r\n              to=\"/settings/account\"\r\n              activeClassName=\"active\"\r\n            >\r\n              Account\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"settings__nav__item\">\r\n            <NavLink\r\n              className=\"settings__nav__link\"\r\n              to=\"/settings/password\"\r\n              activeClassName=\"active\"\r\n            >\r\n              Password\r\n            </NavLink>\r\n          </li>\r\n        </ui>\r\n      </div>\r\n      <div>\r\n        <Redirect exact from=\"/settings\" to=\"/settings/account\" />\r\n        <Route exact path=\"/settings/account\" component={AccountSettings} />\r\n        <Route exact path=\"/settings/password\" component={PasswordSettings} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\nexport default Settings;\r\n"],"sourceRoot":""}