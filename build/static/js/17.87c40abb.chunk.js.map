{"version":3,"sources":["components/services/weahter.js"],"names":["Weather","React","memo","useState","error","setError","data","setData","user","useSelector","state","currentUser","geolocationSuccess","pos","coords","latitude","longitude","url","axios","get","then","response","catch","message","geolocationFaliur","err","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","getErrorCode","useEffect","navigator","geolocation","getCurrentPosition","console","log","document","title","className","width","height","city_name","style","backgroundImage","hrs","Date","getHours","renderCover","temp","src","weather","icon","alt","description","greeting","name","ob_time","split","now","h","m","getMinutes","length","getTime","sunrise","sunset","clouds","wind_spd","rh","pres","snow"],"mappings":"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","file":"static/js/17.87c40abb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Loading from \"../../shared/loading.js\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Sunrise,\r\n  Humidity,\r\n  Wind,\r\n  Clouds,\r\n  Pressure,\r\n  Snow,\r\n  Sunset,\r\n  Map_2 as Map,\r\n} from \"../../assets/icons/icons\";\r\nconst Weather = React.memo(() => {\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState();\r\n  const user = useSelector((state) => state.currentUser);\r\n  const geolocationSuccess = (pos) => {\r\n    const { latitude, longitude } = pos.coords;\r\n    const url =\r\n      `https://api.weatherbit.io/v2.0/current?lat=${latitude}&lon=${longitude}&key=1f701621ea254a1cb3113097e5971fe4`;\r\n    axios\r\n      .get(url)\r\n      .then(function (response) {\r\n        setData(response.data.data[0]);\r\n      })\r\n      .catch(function (error) {\r\n        setError(error.message);\r\n      });\r\n  };\r\n  const getErrorCode = (err) => {\r\n    switch (err.code) {\r\n      case err.PERMISSION_DENIED:\r\n        return \"You have to make location allow first!\";\r\n      case err.POSITION_UNAVAILABLE:\r\n        return \"POSITION_UNAVAILABLE\";\r\n      case err.TIMEOUT:\r\n        return \"TIMEOUT\";\r\n      default:\r\n        return \"UNKNOWN_ERROR\";\r\n    }\r\n  };\r\n  const geolocationFaliur = (err) => {\r\n    setError(getErrorCode(err));\r\n  };\r\n  const currentLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        geolocationSuccess,\r\n        geolocationFaliur\r\n      );\r\n    } else {\r\n      console.log(\"your browser dosnot support geolocation\");\r\n    }\r\n  };\r\n  const greeting = () => {\r\n    var myDate = new Date();\r\n    var hrs = myDate.getHours();\r\n    if (hrs < 12) return \"Good Morning\";\r\n    else if (hrs >= 12 && hrs <= 17) return \"Good Afternoon\";\r\n    else if (hrs >= 17 && hrs <= 24) return \"Good Evening\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    currentLocation();\r\n    document.title=\"Weather\";\r\n  }, []);\r\n  const getTime = () => {\r\n    let now = new Date();\r\n    let h = now.getHours() + \"\",\r\n      m = now.getMinutes() + \"\";\r\n    return (\r\n      (h.length === 1 ? \"0\" + h : h) + \":\" + (m.length === 1 ? \"0\" + m : m)\r\n    );\r\n  };\r\n  const renderCover = () => {\r\n    var myDate = new Date();\r\n    var hrs = myDate.getHours();\r\n    if (hrs < 12 && hrs > 5)\r\n      return \"https://res.cloudinary.com/dmygcaifb/image/upload/v1585957040/weather/image_1_ycx9w0.png\";\r\n    else if (hrs >= 12 && hrs <= 17)\r\n      return \"https://res.cloudinary.com/dmygcaifb/image/upload/v1585957038/weather/5a16845d7fdc2e68b47245f57922b294_bgqbr9.jpg\";\r\n    else\r\n      return \"https://res.cloudinary.com/dmygcaifb/image/upload/v1585957041/weather/bcc9cabb9563793baa61e7f5e15cd32c_uywdu7.png\";\r\n  };\r\n  if (error) {\r\n    return (\r\n      <div className=\"services\">\r\n        <div className=\"services__not-availble\">{error}</div>\r\n      </div>\r\n    );\r\n  } else if (data) {\r\n    return (\r\n      <div className=\"weather\">\r\n        <div className=\"weather__container\">\r\n          {data && (\r\n            <div className=\"weather__body\">\r\n              <div className=\"weather__welcome__place\">\r\n                <span className=\"icon\">\r\n                  {\" \"}\r\n                  <Map width=\"3rem\" height=\"3rem\" />\r\n                </span>{\" \"}\r\n                <h2 className=\"text\">{data.city_name}</h2>\r\n              </div>\r\n              <div\r\n                className=\"weather__header\"\r\n                style={{ backgroundImage: `url(${renderCover()})` }}\r\n              >\r\n                <h2 className=\"weather__header__deg\">\r\n                  {data.temp}\r\n                  <sup>o</sup>\r\n                </h2>\r\n\r\n                <div className=\"weather__header__des\">\r\n                  <span className=\"icon\">\r\n                    <img\r\n                      src={`https://www.weatherbit.io/static/img/icons/${data.weather.icon}.png`}\r\n                      alt=\"\"\r\n                    />\r\n                  </span>\r\n                  <h1 className=\"text\">{data.weather.description}</h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"weather__content\">\r\n                <div className=\"weather__welcome\">\r\n                  <h2 className=\"weather__welcome__head\">\r\n                    {greeting()}, {user ? user.name : \"\"}\r\n                  </h2>\r\n\r\n                  <div className=\"weather__welcome__time\">\r\n                    <h2>{data.ob_time.split(\" \")[0]}</h2>\r\n                    <h2>{getTime()}</h2>\r\n                  </div>\r\n                </div>\r\n                <div className=\"seprator\"></div>\r\n\r\n                <ul className=\"weather__content--list\">\r\n                  <li className=\"weather__content--item\">\r\n                    <div className=\"weather__content--info\">\r\n                      <span>\r\n                        <Sunrise width=\"3rem\" height=\"3rem\" />\r\n                      </span>\r\n                      <h3>sunrise:</h3>\r\n                    </div>\r\n                    <h1>{data.sunrise}</h1>\r\n                  </li>\r\n                  <div className=\"seprator\" />\r\n                  <li className=\"weather__content--item\">\r\n                    <div className=\"weather__content--info\">\r\n                      <span>\r\n                        <Sunset width=\"3rem\" height=\"3rem\" />\r\n                      </span>\r\n                      <h3>sunset:</h3>\r\n                    </div>\r\n                    <h1>{data.sunset}</h1>\r\n                  </li>\r\n                  <div className=\"seprator\" />\r\n                  <li className=\"weather__content--item\">\r\n                    <div className=\"weather__content--info\">\r\n                      <span>\r\n                        <Clouds width=\"3rem\" height=\"3rem\" />\r\n                      </span>\r\n                      <h3>clouds:</h3>\r\n                    </div>\r\n                    <h1>{data.clouds}%</h1>\r\n                  </li>\r\n                  <div className=\"seprator\" />\r\n                  <li className=\"weather__content--item\">\r\n                    <div className=\"weather__content--info\">\r\n                      <span>\r\n                        <Wind width=\"3rem\" height=\"3rem\" />\r\n                      </span>\r\n                      <h3>wind speed:</h3>\r\n                    </div>\r\n                    <h1>{data.wind_spd}m/s</h1>\r\n                  </li>\r\n                  <div className=\"seprator\" />\r\n                  <li className=\"weather__content--item\">\r\n                    <div className=\"weather__content--info\">\r\n                      <span>\r\n                        <Humidity width=\"3rem\" height=\"3rem\" />\r\n                      </span>\r\n                      <h3>humidity:</h3>\r\n                    </div>\r\n                    <h1>{data.rh}%</h1>\r\n                  </li>\r\n                  <div className=\"seprator\" />\r\n                  <li className=\"weather__content--item\">\r\n                    <div className=\"weather__content--info\">\r\n                      <span>\r\n                        <Pressure width=\"3rem\" height=\"3rem\" />\r\n                      </span>\r\n                      <h3>pressure:</h3>\r\n                    </div>\r\n                    <h1>{data.pres}mb</h1>\r\n                  </li>\r\n                  <div className=\"seprator\" />\r\n                  <li className=\"weather__content--item\">\r\n                    <div className=\"weather__content--info\">\r\n                      <span>\r\n                        <Wind width=\"3rem\" height=\"3rem\" />\r\n                      </span>\r\n                      <h3>Snowfall:</h3>\r\n                    </div>\r\n                    <h1>{data.snow}mm/hr</h1>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"services\">\r\n      <Loading />\r\n    </div>\r\n  );\r\n});\r\nexport default Weather;\r\n"],"sourceRoot":""}